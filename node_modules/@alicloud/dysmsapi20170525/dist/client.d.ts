/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddShortUrlRequest extends $tea.Model {
    effectiveDays?: string;
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    shortUrlName?: string;
    sourceUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddShortUrlResponseBody extends $tea.Model {
    code?: string;
    data?: AddShortUrlResponseBodyData;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddShortUrlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: AddShortUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsSignRequest extends $tea.Model {
    ownerId?: number;
    remark?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signFileList?: AddSmsSignRequestSignFileList[];
    signName?: string;
    signSource?: number;
    signType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsSignResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsSignResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: AddSmsSignResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsTemplateRequest extends $tea.Model {
    ownerId?: number;
    remark?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    templateContent?: string;
    templateName?: string;
    templateType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsTemplateResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: AddSmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckMobilesCardSupportRequest extends $tea.Model {
    mobiles?: {
        [key: string]: any;
    }[];
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckMobilesCardSupportResponseBody extends $tea.Model {
    code?: string;
    data?: CheckMobilesCardSupportResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckMobilesCardSupportResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: CheckMobilesCardSupportResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConversionDataIntlRequest extends $tea.Model {
    conversionRate?: string;
    ownerId?: number;
    reportTime?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConversionDataIntlResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConversionDataIntlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: ConversionDataIntlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardSmsTemplateRequest extends $tea.Model {
    factorys?: string;
    memo?: string;
    template?: {
        [key: string]: any;
    };
    templateName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardSmsTemplateShrinkRequest extends $tea.Model {
    factorys?: string;
    memo?: string;
    templateShrink?: string;
    templateName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardSmsTemplateResponseBody extends $tea.Model {
    code?: string;
    data?: CreateCardSmsTemplateResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardSmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: CreateCardSmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSmartShortUrlRequest extends $tea.Model {
    expiration?: number;
    ownerId?: number;
    phoneNumbers?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    sourceName?: string;
    sourceUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSmartShortUrlResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    model?: CreateSmartShortUrlResponseBodyModel[];
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSmartShortUrlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: CreateSmartShortUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteShortUrlRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    sourceUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteShortUrlResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteShortUrlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: DeleteShortUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsSignRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsSignResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsSignResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: DeleteSmsSignResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsTemplateRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsTemplateResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteSmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: DeleteSmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCardSmsLinkRequest extends $tea.Model {
    cardCodeType?: number;
    cardLinkType?: number;
    cardTemplateCode?: string;
    cardTemplateParamJson?: string;
    customShortCodeJson?: string;
    domain?: string;
    outId?: string;
    phoneNumberJson?: string;
    signNameJson?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCardSmsLinkResponseBody extends $tea.Model {
    code?: string;
    data?: GetCardSmsLinkResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCardSmsLinkResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: GetCardSmsLinkResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMediaResourceIdRequest extends $tea.Model {
    extendInfo?: string;
    fileSize?: number;
    memo?: string;
    ossKey?: string;
    resourceType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMediaResourceIdResponseBody extends $tea.Model {
    code?: string;
    data?: GetMediaResourceIdResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMediaResourceIdResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: GetMediaResourceIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOSSInfoForCardTemplateResponseBody extends $tea.Model {
    code?: string;
    data?: GetOSSInfoForCardTemplateResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOSSInfoForCardTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: GetOSSInfoForCardTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesRequest extends $tea.Model {
    nextToken?: string;
    ownerId?: number;
    pageSize?: number;
    prodCode?: string;
    regionId?: string;
    resourceId?: string[];
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    resourceType?: string;
    tag?: ListTagResourcesRequestTag[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesResponseBody extends $tea.Model {
    code?: string;
    nextToken?: string;
    requestId?: string;
    tagResources?: ListTagResourcesResponseBodyTagResources;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: ListTagResourcesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsSignRequest extends $tea.Model {
    ownerId?: number;
    remark?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signFileList?: ModifySmsSignRequestSignFileList[];
    signName?: string;
    signSource?: number;
    signType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsSignResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsSignResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: ModifySmsSignResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsTemplateRequest extends $tea.Model {
    ownerId?: number;
    remark?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    templateCode?: string;
    templateContent?: string;
    templateName?: string;
    templateType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsTemplateResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: ModifySmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateRequest extends $tea.Model {
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateResponseBody extends $tea.Model {
    code?: string;
    data?: QueryCardSmsTemplateResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QueryCardSmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateReportRequest extends $tea.Model {
    endDate?: string;
    startDate?: string;
    templateCodes?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateReportResponseBody extends $tea.Model {
    code?: string;
    data?: QueryCardSmsTemplateReportResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateReportResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QueryCardSmsTemplateReportResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportRequest extends $tea.Model {
    mobiles?: {
        [key: string]: any;
    }[];
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportShrinkRequest extends $tea.Model {
    mobilesShrink?: string;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportResponseBody extends $tea.Model {
    code?: string;
    data?: QueryMobilesCardSupportResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QueryMobilesCardSupportResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageSmartShortUrlLogRequest extends $tea.Model {
    clickState?: number;
    createDateEnd?: number;
    createDateStart?: number;
    endId?: number;
    ownerId?: number;
    pageNo?: number;
    pageSize?: number;
    phoneNumber?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    shortName?: string;
    shortUrl?: string;
    startId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageSmartShortUrlLogResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    model?: QueryPageSmartShortUrlLogResponseBodyModel;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageSmartShortUrlLogResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QueryPageSmartShortUrlLogResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendDetailsRequest extends $tea.Model {
    bizId?: string;
    currentPage?: number;
    ownerId?: number;
    pageSize?: number;
    phoneNumber?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    sendDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendDetailsResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    smsSendDetailDTOs?: QuerySendDetailsResponseBodySmsSendDetailDTOs;
    totalCount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendDetailsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySendDetailsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendStatisticsRequest extends $tea.Model {
    endDate?: string;
    isGlobe?: number;
    ownerId?: number;
    pageIndex?: number;
    pageSize?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signName?: string;
    startDate?: string;
    templateType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendStatisticsResponseBody extends $tea.Model {
    code?: string;
    data?: QuerySendStatisticsResponseBodyData;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendStatisticsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySendStatisticsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortUrlRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    shortUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortUrlResponseBody extends $tea.Model {
    code?: string;
    data?: QueryShortUrlResponseBodyData;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortUrlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QueryShortUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignResponseBody extends $tea.Model {
    code?: string;
    createDate?: string;
    message?: string;
    reason?: string;
    requestId?: string;
    signName?: string;
    signStatus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySmsSignResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignListRequest extends $tea.Model {
    ownerId?: number;
    pageIndex?: number;
    pageSize?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignListResponseBody extends $tea.Model {
    code?: string;
    currentPage?: number;
    message?: string;
    pageSize?: number;
    requestId?: string;
    smsSignList?: QuerySmsSignListResponseBodySmsSignList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignListResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySmsSignListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateRequest extends $tea.Model {
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateResponseBody extends $tea.Model {
    code?: string;
    createDate?: string;
    message?: string;
    reason?: string;
    requestId?: string;
    templateCode?: string;
    templateContent?: string;
    templateName?: string;
    templateStatus?: number;
    templateType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySmsTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateListRequest extends $tea.Model {
    ownerId?: number;
    pageIndex?: number;
    pageSize?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateListResponseBody extends $tea.Model {
    code?: string;
    currentPage?: number;
    message?: string;
    pageSize?: number;
    requestId?: string;
    smsTemplateList?: QuerySmsTemplateListResponseBodySmsTemplateList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateListResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: QuerySmsTemplateListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchCardSmsRequest extends $tea.Model {
    cardTemplateCode?: string;
    cardTemplateParamJson?: string;
    digitalTemplateCode?: string;
    digitalTemplateParamJson?: string;
    fallbackType?: string;
    outId?: string;
    phoneNumberJson?: string;
    signNameJson?: string;
    smsTemplateCode?: string;
    smsTemplateParamJson?: string;
    smsUpExtendCodeJson?: string;
    templateCode?: string;
    templateParamJson?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchCardSmsResponseBody extends $tea.Model {
    code?: string;
    data?: SendBatchCardSmsResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchCardSmsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: SendBatchCardSmsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchSmsRequest extends $tea.Model {
    outId?: string;
    ownerId?: number;
    phoneNumberJson?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signNameJson?: string;
    smsUpExtendCodeJson?: string;
    templateCode?: string;
    templateParamJson?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchSmsResponseBody extends $tea.Model {
    bizId?: string;
    code?: string;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchSmsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: SendBatchSmsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendCardSmsRequest extends $tea.Model {
    cardObjects?: SendCardSmsRequestCardObjects[];
    cardTemplateCode?: string;
    digitalTemplateCode?: string;
    digitalTemplateParam?: string;
    fallbackType?: string;
    outId?: string;
    signName?: string;
    smsTemplateCode?: string;
    smsTemplateParam?: string;
    smsUpExtendCode?: string;
    templateCode?: string;
    templateParam?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendCardSmsResponseBody extends $tea.Model {
    code?: string;
    data?: SendCardSmsResponseBodyData;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendCardSmsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: SendCardSmsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendSmsRequest extends $tea.Model {
    outId?: string;
    ownerId?: number;
    phoneNumbers?: string;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    signName?: string;
    smsUpExtendCode?: string;
    templateCode?: string;
    templateParam?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendSmsResponseBody extends $tea.Model {
    bizId?: string;
    code?: string;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendSmsResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: SendSmsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SmsConversionIntlRequest extends $tea.Model {
    conversionTime?: number;
    delivered?: boolean;
    messageId?: string;
    ownerId?: number;
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SmsConversionIntlResponseBody extends $tea.Model {
    code?: string;
    message?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SmsConversionIntlResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: SmsConversionIntlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TagResourcesRequest extends $tea.Model {
    ownerId?: number;
    prodCode?: string;
    regionId?: string;
    resourceId?: string[];
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    resourceType?: string;
    tag?: TagResourcesRequestTag[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TagResourcesResponseBody extends $tea.Model {
    code?: string;
    data?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TagResourcesResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: TagResourcesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UntagResourcesRequest extends $tea.Model {
    all?: boolean;
    ownerId?: number;
    prodCode?: string;
    regionId?: string;
    resourceId?: string[];
    resourceOwnerAccount?: string;
    resourceOwnerId?: number;
    resourceType?: string;
    tagKey?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UntagResourcesResponseBody extends $tea.Model {
    code?: string;
    data?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UntagResourcesResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: UntagResourcesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddShortUrlResponseBodyData extends $tea.Model {
    expireDate?: string;
    shortUrl?: string;
    sourceUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSmsSignRequestSignFileList extends $tea.Model {
    fileContents?: string;
    fileSuffix?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckMobilesCardSupportResponseBodyDataQueryResult extends $tea.Model {
    mobile?: string;
    support?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckMobilesCardSupportResponseBodyData extends $tea.Model {
    queryResult?: CheckMobilesCardSupportResponseBodyDataQueryResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardSmsTemplateResponseBodyData extends $tea.Model {
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSmartShortUrlResponseBodyModel extends $tea.Model {
    domain?: string;
    expiration?: number;
    phoneNumber?: string;
    shortName?: string;
    shortUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCardSmsLinkResponseBodyData extends $tea.Model {
    cardPhoneNumbers?: string;
    cardSignNames?: string;
    cardSmsLinks?: string;
    cardTmpState?: number;
    notMediaMobiles?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMediaResourceIdResponseBodyData extends $tea.Model {
    resUrlDownload?: string;
    resourceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOSSInfoForCardTemplateResponseBodyData extends $tea.Model {
    accessKeyId?: string;
    aliUid?: string;
    bucket?: string;
    expireTime?: string;
    host?: string;
    policy?: string;
    signature?: string;
    startPath?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesRequestTag extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesResponseBodyTagResourcesTagResource extends $tea.Model {
    resourceId?: string;
    resourceType?: string;
    tagKey?: string;
    tagValue?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListTagResourcesResponseBodyTagResources extends $tea.Model {
    tagResource?: ListTagResourcesResponseBodyTagResourcesTagResource[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySmsSignRequestSignFileList extends $tea.Model {
    fileContents?: string;
    fileSuffix?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateResponseBodyData extends $tea.Model {
    templates?: {
        [key: string]: any;
    }[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCardSmsTemplateReportResponseBodyData extends $tea.Model {
    model?: {
        [key: string]: any;
    }[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportResponseBodyDataQueryResult extends $tea.Model {
    mobile?: string;
    support?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMobilesCardSupportResponseBodyData extends $tea.Model {
    queryResult?: QueryMobilesCardSupportResponseBodyDataQueryResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageSmartShortUrlLogResponseBodyModelList extends $tea.Model {
    clickState?: number;
    clickTime?: number;
    createTime?: number;
    phoneNumber?: string;
    shortName?: string;
    shortUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageSmartShortUrlLogResponseBodyModel extends $tea.Model {
    list?: QueryPageSmartShortUrlLogResponseBodyModelList[];
    pageNo?: number;
    pageSize?: number;
    totalCount?: number;
    totalPage?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendDetailsResponseBodySmsSendDetailDTOsSmsSendDetailDTO extends $tea.Model {
    content?: string;
    errCode?: string;
    outId?: string;
    phoneNum?: string;
    receiveDate?: string;
    sendDate?: string;
    sendStatus?: number;
    templateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendDetailsResponseBodySmsSendDetailDTOs extends $tea.Model {
    smsSendDetailDTO?: QuerySendDetailsResponseBodySmsSendDetailDTOsSmsSendDetailDTO[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendStatisticsResponseBodyDataTargetList extends $tea.Model {
    noRespondedCount?: number;
    respondedFailCount?: number;
    respondedSuccessCount?: number;
    sendDate?: string;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySendStatisticsResponseBodyData extends $tea.Model {
    targetList?: QuerySendStatisticsResponseBodyDataTargetList[];
    totalSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortUrlResponseBodyData extends $tea.Model {
    createDate?: string;
    expireDate?: string;
    pageViewCount?: string;
    shortUrl?: string;
    shortUrlName?: string;
    shortUrlStatus?: string;
    sourceUrl?: string;
    uniqueVisitorCount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignListResponseBodySmsSignListReason extends $tea.Model {
    rejectDate?: string;
    rejectInfo?: string;
    rejectSubInfo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsSignListResponseBodySmsSignList extends $tea.Model {
    auditStatus?: string;
    businessType?: string;
    createDate?: string;
    orderId?: string;
    reason?: QuerySmsSignListResponseBodySmsSignListReason;
    signName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateListResponseBodySmsTemplateListReason extends $tea.Model {
    rejectDate?: string;
    rejectInfo?: string;
    rejectSubInfo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySmsTemplateListResponseBodySmsTemplateList extends $tea.Model {
    auditStatus?: string;
    createDate?: string;
    orderId?: string;
    outerTemplateType?: number;
    reason?: QuerySmsTemplateListResponseBodySmsTemplateListReason;
    templateCode?: string;
    templateContent?: string;
    templateName?: string;
    templateType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendBatchCardSmsResponseBodyData extends $tea.Model {
    bizCardId?: string;
    bizDigitalId?: string;
    bizSmsId?: string;
    cardTmpState?: number;
    mediaMobiles?: string;
    notMediaMobiles?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendCardSmsRequestCardObjects extends $tea.Model {
    customUrl?: string;
    dyncParams?: string;
    mobile?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendCardSmsResponseBodyData extends $tea.Model {
    bizCardId?: string;
    bizDigitalId?: string;
    bizSmsId?: string;
    cardTmpState?: number;
    mediaMobiles?: string;
    notMediaMobiles?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TagResourcesRequestTag extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: {
        [key: string]: string;
    }, endpoint: string): string;
    addShortUrlWithOptions(request: AddShortUrlRequest, runtime: $Util.RuntimeOptions): Promise<AddShortUrlResponse>;
    addShortUrl(request: AddShortUrlRequest): Promise<AddShortUrlResponse>;
    addSmsSignWithOptions(request: AddSmsSignRequest, runtime: $Util.RuntimeOptions): Promise<AddSmsSignResponse>;
    addSmsSign(request: AddSmsSignRequest): Promise<AddSmsSignResponse>;
    addSmsTemplateWithOptions(request: AddSmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<AddSmsTemplateResponse>;
    addSmsTemplate(request: AddSmsTemplateRequest): Promise<AddSmsTemplateResponse>;
    checkMobilesCardSupportWithOptions(request: CheckMobilesCardSupportRequest, runtime: $Util.RuntimeOptions): Promise<CheckMobilesCardSupportResponse>;
    checkMobilesCardSupport(request: CheckMobilesCardSupportRequest): Promise<CheckMobilesCardSupportResponse>;
    conversionDataIntlWithOptions(request: ConversionDataIntlRequest, runtime: $Util.RuntimeOptions): Promise<ConversionDataIntlResponse>;
    conversionDataIntl(request: ConversionDataIntlRequest): Promise<ConversionDataIntlResponse>;
    createCardSmsTemplateWithOptions(tmpReq: CreateCardSmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<CreateCardSmsTemplateResponse>;
    createCardSmsTemplate(request: CreateCardSmsTemplateRequest): Promise<CreateCardSmsTemplateResponse>;
    createSmartShortUrlWithOptions(request: CreateSmartShortUrlRequest, runtime: $Util.RuntimeOptions): Promise<CreateSmartShortUrlResponse>;
    createSmartShortUrl(request: CreateSmartShortUrlRequest): Promise<CreateSmartShortUrlResponse>;
    deleteShortUrlWithOptions(request: DeleteShortUrlRequest, runtime: $Util.RuntimeOptions): Promise<DeleteShortUrlResponse>;
    deleteShortUrl(request: DeleteShortUrlRequest): Promise<DeleteShortUrlResponse>;
    deleteSmsSignWithOptions(request: DeleteSmsSignRequest, runtime: $Util.RuntimeOptions): Promise<DeleteSmsSignResponse>;
    deleteSmsSign(request: DeleteSmsSignRequest): Promise<DeleteSmsSignResponse>;
    deleteSmsTemplateWithOptions(request: DeleteSmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<DeleteSmsTemplateResponse>;
    deleteSmsTemplate(request: DeleteSmsTemplateRequest): Promise<DeleteSmsTemplateResponse>;
    getCardSmsLinkWithOptions(request: GetCardSmsLinkRequest, runtime: $Util.RuntimeOptions): Promise<GetCardSmsLinkResponse>;
    getCardSmsLink(request: GetCardSmsLinkRequest): Promise<GetCardSmsLinkResponse>;
    getMediaResourceIdWithOptions(request: GetMediaResourceIdRequest, runtime: $Util.RuntimeOptions): Promise<GetMediaResourceIdResponse>;
    getMediaResourceId(request: GetMediaResourceIdRequest): Promise<GetMediaResourceIdResponse>;
    getOSSInfoForCardTemplateWithOptions(runtime: $Util.RuntimeOptions): Promise<GetOSSInfoForCardTemplateResponse>;
    getOSSInfoForCardTemplate(): Promise<GetOSSInfoForCardTemplateResponse>;
    listTagResourcesWithOptions(request: ListTagResourcesRequest, runtime: $Util.RuntimeOptions): Promise<ListTagResourcesResponse>;
    listTagResources(request: ListTagResourcesRequest): Promise<ListTagResourcesResponse>;
    modifySmsSignWithOptions(request: ModifySmsSignRequest, runtime: $Util.RuntimeOptions): Promise<ModifySmsSignResponse>;
    modifySmsSign(request: ModifySmsSignRequest): Promise<ModifySmsSignResponse>;
    modifySmsTemplateWithOptions(request: ModifySmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<ModifySmsTemplateResponse>;
    modifySmsTemplate(request: ModifySmsTemplateRequest): Promise<ModifySmsTemplateResponse>;
    queryCardSmsTemplateWithOptions(request: QueryCardSmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<QueryCardSmsTemplateResponse>;
    queryCardSmsTemplate(request: QueryCardSmsTemplateRequest): Promise<QueryCardSmsTemplateResponse>;
    queryCardSmsTemplateReportWithOptions(request: QueryCardSmsTemplateReportRequest, runtime: $Util.RuntimeOptions): Promise<QueryCardSmsTemplateReportResponse>;
    queryCardSmsTemplateReport(request: QueryCardSmsTemplateReportRequest): Promise<QueryCardSmsTemplateReportResponse>;
    queryMobilesCardSupportWithOptions(tmpReq: QueryMobilesCardSupportRequest, runtime: $Util.RuntimeOptions): Promise<QueryMobilesCardSupportResponse>;
    queryMobilesCardSupport(request: QueryMobilesCardSupportRequest): Promise<QueryMobilesCardSupportResponse>;
    queryPageSmartShortUrlLogWithOptions(request: QueryPageSmartShortUrlLogRequest, runtime: $Util.RuntimeOptions): Promise<QueryPageSmartShortUrlLogResponse>;
    queryPageSmartShortUrlLog(request: QueryPageSmartShortUrlLogRequest): Promise<QueryPageSmartShortUrlLogResponse>;
    querySendDetailsWithOptions(request: QuerySendDetailsRequest, runtime: $Util.RuntimeOptions): Promise<QuerySendDetailsResponse>;
    querySendDetails(request: QuerySendDetailsRequest): Promise<QuerySendDetailsResponse>;
    querySendStatisticsWithOptions(request: QuerySendStatisticsRequest, runtime: $Util.RuntimeOptions): Promise<QuerySendStatisticsResponse>;
    querySendStatistics(request: QuerySendStatisticsRequest): Promise<QuerySendStatisticsResponse>;
    queryShortUrlWithOptions(request: QueryShortUrlRequest, runtime: $Util.RuntimeOptions): Promise<QueryShortUrlResponse>;
    queryShortUrl(request: QueryShortUrlRequest): Promise<QueryShortUrlResponse>;
    querySmsSignWithOptions(request: QuerySmsSignRequest, runtime: $Util.RuntimeOptions): Promise<QuerySmsSignResponse>;
    querySmsSign(request: QuerySmsSignRequest): Promise<QuerySmsSignResponse>;
    querySmsSignListWithOptions(request: QuerySmsSignListRequest, runtime: $Util.RuntimeOptions): Promise<QuerySmsSignListResponse>;
    querySmsSignList(request: QuerySmsSignListRequest): Promise<QuerySmsSignListResponse>;
    querySmsTemplateWithOptions(request: QuerySmsTemplateRequest, runtime: $Util.RuntimeOptions): Promise<QuerySmsTemplateResponse>;
    querySmsTemplate(request: QuerySmsTemplateRequest): Promise<QuerySmsTemplateResponse>;
    querySmsTemplateListWithOptions(request: QuerySmsTemplateListRequest, runtime: $Util.RuntimeOptions): Promise<QuerySmsTemplateListResponse>;
    querySmsTemplateList(request: QuerySmsTemplateListRequest): Promise<QuerySmsTemplateListResponse>;
    sendBatchCardSmsWithOptions(request: SendBatchCardSmsRequest, runtime: $Util.RuntimeOptions): Promise<SendBatchCardSmsResponse>;
    sendBatchCardSms(request: SendBatchCardSmsRequest): Promise<SendBatchCardSmsResponse>;
    sendBatchSmsWithOptions(request: SendBatchSmsRequest, runtime: $Util.RuntimeOptions): Promise<SendBatchSmsResponse>;
    sendBatchSms(request: SendBatchSmsRequest): Promise<SendBatchSmsResponse>;
    sendCardSmsWithOptions(request: SendCardSmsRequest, runtime: $Util.RuntimeOptions): Promise<SendCardSmsResponse>;
    sendCardSms(request: SendCardSmsRequest): Promise<SendCardSmsResponse>;
    sendSmsWithOptions(request: SendSmsRequest, runtime: $Util.RuntimeOptions): Promise<SendSmsResponse>;
    sendSms(request: SendSmsRequest): Promise<SendSmsResponse>;
    smsConversionIntlWithOptions(request: SmsConversionIntlRequest, runtime: $Util.RuntimeOptions): Promise<SmsConversionIntlResponse>;
    smsConversionIntl(request: SmsConversionIntlRequest): Promise<SmsConversionIntlResponse>;
    tagResourcesWithOptions(request: TagResourcesRequest, runtime: $Util.RuntimeOptions): Promise<TagResourcesResponse>;
    tagResources(request: TagResourcesRequest): Promise<TagResourcesResponse>;
    untagResourcesWithOptions(request: UntagResourcesRequest, runtime: $Util.RuntimeOptions): Promise<UntagResourcesResponse>;
    untagResources(request: UntagResourcesRequest): Promise<UntagResourcesResponse>;
}
